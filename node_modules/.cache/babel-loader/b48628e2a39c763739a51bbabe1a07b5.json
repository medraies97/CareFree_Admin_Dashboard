{"ast":null,"code":"var _jsxFileName = \"C:\\\\AReact\\\\black-dashboard-react-master\\\\src\\\\components\\\\Sidebar\\\\Sidebar.js\";\n\n/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\"; // nodejs library to set properties for components\n\nimport { PropTypes } from \"prop-types\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\"; // reactstrap components\n\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.linkOnClick = () => {\n      document.documentElement.classList.remove(\"nav-open\");\n    };\n\n    this.activeRoute.bind(this);\n  } // verifies if routeName is the one active (in browser input)\n\n\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          bgColor = _this$props.bgColor,\n          routes = _this$props.routes,\n          rtlActive = _this$props.rtlActive,\n          logo = _this$props.logo;\n    let logoImg = null;\n    let logoText = null;\n\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = /*#__PURE__*/React.createElement(\"a\", {\n          href: logo.outterLink,\n          className: \"simple-text logo-mini\",\n          target: \"_blank\",\n          onClick: this.props.toggleSidebar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"logo-img\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: logo.imgSrc,\n          alt: \"react-logo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }\n        })));\n        logoText = /*#__PURE__*/React.createElement(\"a\", {\n          href: logo.outterLink,\n          className: \"simple-text logo-normal\",\n          target: \"_blank\",\n          onClick: this.props.toggleSidebar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }\n        }, logo.text);\n      } else {\n        logoImg = /*#__PURE__*/React.createElement(Link, {\n          to: logo.innerLink,\n          className: \"simple-text logo-mini\",\n          onClick: this.props.toggleSidebar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"logo-img\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: logo.imgSrc,\n          alt: \"react-logo\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }\n        })));\n        logoText = /*#__PURE__*/React.createElement(Link, {\n          to: logo.innerLink,\n          className: \"simple-text logo-normal\",\n          onClick: this.props.toggleSidebar,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }\n        }, logo.text);\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar\",\n      data: bgColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-wrapper\",\n      ref: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, logoImg !== null || logoText !== null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, logoImg, logoText) : null, /*#__PURE__*/React.createElement(Nav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, routes.map((prop, key) => {\n      if (prop.redirect) return null;\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: this.activeRoute(prop.path) + (prop.pro ? \" active-pro\" : \"\"),\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: prop.layout + prop.path,\n        className: \"nav-link\",\n        activeClassName: \"active\",\n        onClick: this.props.toggleSidebar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: prop.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, rtlActive ? prop.rtlName : prop.name)));\n    }), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"active-pro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactstrapNavLink, {\n      href: \"https://www.creative-tim.com/product/black-dashboard-pro-react?ref=bdr-user-archive-sidebar-upgrade-pro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-spaceship\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, \"Upgrade to PRO\"))))));\n  }\n\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\nexport default Sidebar;","map":{"version":3,"sources":["C:/AReact/black-dashboard-react-master/src/components/Sidebar/Sidebar.js"],"names":["React","NavLink","Link","PropTypes","PerfectScrollbar","Nav","ReactstrapNavLink","ps","Sidebar","Component","constructor","props","linkOnClick","document","documentElement","classList","remove","activeRoute","bind","routeName","location","pathname","indexOf","componentDidMount","navigator","platform","refs","sidebar","suppressScrollX","suppressScrollY","componentWillUnmount","destroy","render","bgColor","routes","rtlActive","logo","logoImg","logoText","undefined","outterLink","toggleSidebar","imgSrc","text","innerLink","map","prop","key","redirect","path","pro","layout","icon","rtlName","name","defaultProps","propTypes","bool","oneOf","arrayOf","object","shape","string","node"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n// nodejs library to set properties for components\nimport { PropTypes } from \"prop-types\";\n\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, NavLink as ReactstrapNavLink } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.activeRoute.bind(this);\n  }\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  linkOnClick = () => {\n    document.documentElement.classList.remove(\"nav-open\");\n  };\n  render() {\n    const { bgColor, routes, rtlActive, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.toggleSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </Link>\n        );\n        logoText = (\n          <Link\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.toggleSidebar}\n          >\n            {logo.text}\n          </Link>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={bgColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>\n            {routes.map((prop, key) => {\n              if (prop.redirect) return null;\n              return (\n                <li\n                  className={\n                    this.activeRoute(prop.path) +\n                    (prop.pro ? \" active-pro\" : \"\")\n                  }\n                  key={key}\n                >\n                  <NavLink\n                    to={prop.layout + prop.path}\n                    className=\"nav-link\"\n                    activeClassName=\"active\"\n                    onClick={this.props.toggleSidebar}\n                  >\n                    <i className={prop.icon} />\n                    <p>{rtlActive ? prop.rtlName : prop.name}</p>\n                  </NavLink>\n                </li>\n              );\n            })}\n            <li\n              className=\"active-pro\"\n            >\n              <ReactstrapNavLink\n                href=\"https://www.creative-tim.com/product/black-dashboard-pro-react?ref=bdr-user-archive-sidebar-upgrade-pro\"\n              >\n                <i className=\"tim-icons icon-spaceship\" />\n                <p>Upgrade to PRO</p>\n              </ReactstrapNavLink>\n            </li>\n          </Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.defaultProps = {\n  rtlActive: false,\n  bgColor: \"primary\",\n  routes: [{}]\n};\n\nSidebar.propTypes = {\n  // if true, then instead of the routes[i].name, routes[i].rtlName will be rendered\n  // insde the links of this component\n  rtlActive: PropTypes.bool,\n  bgColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\"]),\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link to=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the text of the logo\n    text: PropTypes.node,\n    // the image src of the logo\n    imgSrc: PropTypes.string\n  })\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}